def letter(n):
	L = [0]*n
	L[1] = 1
	for i in range(2,n):
		L[i] = L[i-1]*i + L[i-2]*i
	return str(L[n-1])

while True:
	n = int(input('how many letters? '))
	print("D(n) = "+letter(n))

#对于第n封信，基于之前的情况有两种替换方式
#1. 基于D(n-1)的所有排好序的序列，第n封信与各序列中的各个元素分别替换，D(n-1)中一个序列中有n-1个元素，因此，这种情况下，产生了(n-1)*D(n-1)个新的序列
#2. 然而，在D(n-1)排好的序列中，每一封信都不可能投入相对应的信箱，如果假设第i封信可以在自己的信箱中，其他的信再按原规则排列，那么就多出(n-1)*D(n-2)的
#新序列。此时，便可以用第n封信与之前的第i封信替换，这样便又产生符合原规则的(n-1)*D(n-2)封信
#综上，D(n) = (n-1)*D(n-1)+(n-1)*D(n-2)
